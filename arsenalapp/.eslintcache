[{"C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\index.js":"1","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\App.js":"2","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\pages\\HeaderPage.js":"3","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\components\\Nav.js":"4","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\pages\\MainHolder.js":"5","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\pages\\LatestScores.js":"6"},{"size":207,"mtime":1606990013186,"results":"7","hashOfConfig":"8"},{"size":516,"mtime":1607897881088,"results":"9","hashOfConfig":"8"},{"size":289,"mtime":1645466281988,"results":"10","hashOfConfig":"8"},{"size":4160,"mtime":1649603175913,"results":"11","hashOfConfig":"8"},{"size":2196,"mtime":1645467589925,"results":"12","hashOfConfig":"8"},{"size":4722,"mtime":1645468041435,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tfe3rc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\index.js",[],["30","31"],"C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\App.js",[],"C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\pages\\HeaderPage.js",["32"],"import React from \"react\";\r\nimport Nav from \"../components/Nav\";\r\n// import \"../Style.css\";\r\n\r\nconst HeaderPage = () => {\r\n  return (\r\n    <div className=\"header-page\" id=\"header-page\">\r\n      <div className=\"arsenal-stadium-bg\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderPage;\r\n","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\components\\Nav.js",["33","34"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Nav = () => {\r\n  const [mdNavbar, setMDNavbar] = useState();\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n  const activateNav = () => {\r\n    const navbarSite = document.querySelector(\".navbar-site\");\r\n    const logo = document.querySelector(\".navbar-logo\");\r\n    const width = logo.clientWidth;\r\n\r\n    navbarSite.classList.toggle(\"change\");\r\n\r\n    if (navbarSite.classList.contains(\"change\")) {\r\n      logo.style.marginLeft = `calc(50% - ${width / 2}px)`;\r\n    } else {\r\n      logo.style.marginLeft = 0;\r\n    }\r\n  };\r\n\r\n  const changeTypeNav = () => {\r\n    const nav = document.querySelector(\".navbar-site\");\r\n    if (window.innerWidth >= 600) {\r\n      nav.style.backgroundColor = \"transparent\";\r\n      setMDNavbar(true);\r\n    } else {\r\n      nav.style.backgroundColor = \"black\";\r\n      nav.classList.add(\"scrolled\");\r\n      nav.classList.remove(\"unscrolled\");\r\n      setMDNavbar(false);\r\n    }\r\n  };\r\n\r\n  const changeColorNav = (e) => {\r\n    const stadium = document.querySelector(\".arsenal-stadium-bg\");\r\n    const scrolledNav = document.querySelector(\".scrolled-nav\");\r\n    const nav = document.querySelector(\".navbar-site\");\r\n\r\n    const stadiumOptions = {\r\n      threshold: 1,\r\n    };\r\n\r\n    const stadiumObserver = new IntersectionObserver(function (\r\n      entries,\r\n      stadiumObserver\r\n    ) {\r\n      console.log(mdNavbar);\r\n      // setFirstLoad(false);\r\n      entries.forEach((entry) => {\r\n        if (!entry.isIntersecting) {\r\n          nav.classList.add(\"scrolled\");\r\n          nav.classList.remove(\"unscrolled\");\r\n          scrolledNav.style.height = \"70px\";\r\n        }\r\n      });\r\n    },\r\n    stadiumOptions);\r\n\r\n    stadiumObserver.observe(stadium);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mdNavbar) {\r\n      changeColorNav();\r\n    }\r\n    changeTypeNav();\r\n    window.addEventListener(\"resize\", changeTypeNav);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", changeTypeNav);\r\n    };\r\n  }, [mdNavbar]);\r\n\r\n  if (mdNavbar) {\r\n    return (\r\n      <div\r\n        className={`navbar-site page-navbar-md font-garbled ${\r\n          firstLoad ? \"unscrolled\" : \"scrolled\"\r\n        }`}\r\n      >\r\n        <div className=\"scrolled-nav\"></div>\r\n        <div className=\"page-navbar-holder-md\">\r\n          <div className=\"navbar-logo\">\r\n            <h2 className=\"logo-text\">logo</h2>\r\n          </div>\r\n          <ul className=\"navbar-menu-md\">\r\n            <li>\r\n              <a href=\"#header-page\" class=\"a-nav-element\">\r\n                Menu\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#main-site\" class=\"a-nav-element\">\r\n                Latest\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#score-container\" class=\"a-nav-element\">\r\n                Table\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"navbar-site page-navbar font-garbled scrolled\">\r\n        <div className=\"page-navbar-holder\">\r\n          <div className=\"navbar-logo\">\r\n            <h2 className=\"logo-text\">logo</h2>\r\n          </div>\r\n          <div className=\"navbar-menu\">\r\n            <div className=\"bar-container\" onClick={activateNav}>\r\n              <div className=\"bar1\"></div>\r\n              <div className=\"bar2\"></div>\r\n              <div className=\"bar3\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"falling-nav\">\r\n          <ul>\r\n            <li className=\"border-bottom\" onClick={activateNav}>\r\n              <a href=\"#header-page\" className=\"a-nav-element\">\r\n                Menu\r\n              </a>\r\n            </li>\r\n            <li className=\"border-bottom\" onClick={activateNav}>\r\n              <a href=\"#main-site\" className=\"a-nav-element\">\r\n                Latest\r\n              </a>\r\n            </li>\r\n            <li onClick={activateNav}>\r\n              <a href=\"#score-container \" className=\"a-nav-element\">\r\n                Table\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\pages\\MainHolder.js",[],"C:\\Users\\Kacper\\Desktop\\htmlCss\\CSSHTMLJS\\arsenalApp\\arsenalapp\\src\\pages\\LatestScores.js",["35"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst largeSize = 1200;\r\nconst mediumSize = 992;\r\nconst smallSize = 768;\r\nconst extraSmallSize = 599;\r\n\r\nconst LatestScores = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [windowWidth, setWindowWidth] = useState(0);\r\n\r\n  const changeSize = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n    window.onload = changeSize;\r\n    window.addEventListener(\"resize\", changeSize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", changeSize);\r\n    };\r\n  }, []);\r\n\r\n  const getInfo = async () => {\r\n    const response = await axios.get(\"http://127.0.0.1:8000/api/league_table\");\r\n\r\n    console.log(response.data);\r\n    setTableData(response.data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"scores-container\" id=\"score-container\">\r\n      {tableData.length > 0 && (\r\n        <div className=\"table-container p-5\">\r\n          <table className=\"premier-table\">\r\n            <thead>\r\n              <tr className=\"headers\">\r\n                <th className=\"place-header\">Pos</th>\r\n                <th className=\"club-header\">Club</th>\r\n                <th className=\"club-2-header\"></th>\r\n                <th className=\"club-2-header\">Played</th>\r\n                {windowWidth > extraSmallSize && (\r\n                  <th className=\"club-2-header\">Won</th>\r\n                )}\r\n                {windowWidth > 700 && <th className=\"club-2-header\">Drawn</th>}\r\n                {windowWidth > extraSmallSize && (\r\n                  <th className=\"club-2-header\">Lost</th>\r\n                )}\r\n                {windowWidth > mediumSize && (\r\n                  <th className=\"club-2-header\">GF</th>\r\n                )}\r\n                {windowWidth > mediumSize && (\r\n                  <th className=\"club-2-header\">GA</th>\r\n                )}\r\n                {windowWidth > mediumSize && (\r\n                  <th className=\"club-2-header\">GD</th>\r\n                )}\r\n                <th className=\"points-header\">Pts</th>\r\n                {windowWidth > largeSize && (\r\n                  <th colSpan=\"5\" className=\"text-center\">\r\n                    Form\r\n                  </th>\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((club) => (\r\n                <tr\r\n                  key={club.place}\r\n                  className={`info-container ${\r\n                    club.long_name.toLowerCase() === \"arsenal\"\r\n                      ? \"highlight\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  <td className=\"info-table\">{club.place}</td>\r\n                  <td className=\"info-table-image\">\r\n                    <img src={`${club.image_href}`} alt=\"club\" />\r\n                  </td>\r\n                  <td className=\"info-table club_name\">\r\n                    {windowWidth <= 800 ? club.short_name : club.long_name}\r\n                  </td>\r\n                  <td className=\"info-table\">{club.played}</td>\r\n                  {windowWidth > extraSmallSize && (\r\n                    <td className=\"info-table\">{club.won}</td>\r\n                  )}\r\n                  {windowWidth > 700 && (\r\n                    <td className=\"info-table\">{club.draw}</td>\r\n                  )}\r\n                  {windowWidth > extraSmallSize && (\r\n                    <td className=\"info-table\">{club.lost}</td>\r\n                  )}\r\n                  {windowWidth > mediumSize && (\r\n                    <td className=\"info-table\">{club.goalsFor}</td>\r\n                  )}\r\n                  {windowWidth > mediumSize && (\r\n                    <td className=\"info-table\">{club.goalsAgainst}</td>\r\n                  )}\r\n                  {windowWidth > mediumSize && (\r\n                    <td className=\"info-table\">\r\n                      {club.goalsFor - club.goalsAgainst >= 0 ? \"+\" : \"\"}\r\n                      {club.goalsFor - club.goalsAgainst}\r\n                    </td>\r\n                  )}\r\n\r\n                  <td className=\"info-table\">\r\n                    <strong>{club.points}</strong>\r\n                  </td>\r\n                  {windowWidth > largeSize && (\r\n                    <td className=\"form-container hideMedium\">\r\n                      {club.form.map((score, index) => (\r\n                        <li key={index} className={score}>\r\n                          {score[0].toUpperCase()}\r\n                        </li>\r\n                      ))}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LatestScores;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":11},{"ruleId":"40","severity":1,"message":"44","line":5,"column":21,"nodeType":"42","messageId":"43","endLine":5,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":72,"column":6,"nodeType":"47","endLine":72,"endColumn":16,"suggestions":"48"},{"ruleId":"40","severity":1,"message":"49","line":6,"column":7,"nodeType":"42","messageId":"43","endLine":6,"endColumn":16},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'setFirstLoad' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeColorNav'. Either include it or remove the dependency array.","ArrayExpression",["52"],"'smallSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [changeColorNav, mdNavbar]",{"range":"55","text":"56"},[1995,2005],"[changeColorNav, mdNavbar]"]